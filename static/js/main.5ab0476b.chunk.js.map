{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["clientId","App","useState","ready","setReady","_authUrl","setAuthUrl","r","g","b","first","setFirst","second","setSecond","third","setThird","fourth","setFourth","ws","useRef","authUrl","useCallback","sessionStorage","twitchOAuthState","nonce","length","text","possible","i","charAt","Math","floor","random","listen","channelId","message","type","data","topics","auth_token","twitchOAuthToken","console","log","Date","toLocaleString","current","send","JSON","stringify","heartbeat","connect","heartbeatHandle","connected","WebSocket","onopen","event","setInterval","onerror","error","onmessage","parse","fetch","headers","Authorization","then","res","json","id","setTimeout","rgbValue","hex","result","exec","parseInt","hexToRgb","redemption","user_input","inputHex","reward","title","includes","onclose","clearInterval","useEffect","document","location","hash","match","hashMatch","expr","state","parseFragment","className","style","background","backgroundSize","animation","animationDirection","display","href","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ab0476b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\n\nconst clientId = \"5styqm5roq5f90rfyylk9fezdiu1mm\";\nconst redirectURI = \"https://samkitkat.github.io/twitch-background/\";\nconst scope = \"channel:read:redemptions%20user:read:email\";\n\n// const getRandomInt = () => {\n//   return Math.floor(Math.random() * 256);\n// };\n\nconst hexToRgb = (hex) => {\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : {\n        r: 0,\n        g: 0,\n        b: 0,\n      };\n};\n\nfunction App() {\n  const [ready, setReady] = useState(false);\n  //const [demo, setDemo] = useState(true);\n  const [_authUrl, setAuthUrl] = useState(\"/twitch-background\");\n\n  //const [left, setLeft] = useState({ r: 0, g: 255, b: 0 });\n  //const [right, setRight] = useState({ r: 255, g: 255, b: 255 });\n\n  const [first, setFirst] = useState({ r: 102, g: 0, b: 204 });\n  const [second, setSecond] = useState({ r: 255, g: 255, b: 255 });\n  const [third, setThird] = useState({ r: 255, g: 255, b: 255 });\n  const [fourth, setFourth] = useState({ r: 255, g: 255, b: 255 });\n\n  var ws = useRef();\n\n  /* for testing to generate random colors */\n  // useEffect(() => {\n  //   let clock;\n  //   if (demo) {\n  //     clock = setInterval(() => {\n  //       setFirst({ r: getRandomInt(), g: getRandomInt(), b: getRandomInt() });\n  //       setSecond({ r: getRandomInt(), g: getRandomInt(), b: getRandomInt() });\n  //       setThird({ r: getRandomInt(), g: getRandomInt(), b: getRandomInt() });\n  //       setFourth({ r: getRandomInt(), g: getRandomInt(), b: getRandomInt() });\n  //     }, 5000);\n  //   }\n  //   return () => {\n  //     clearInterval(clock);\n  //   };\n  // }, [demo]);\n\n  var parseFragment = (hash) => {\n    var hashMatch = function (expr) {\n      var match = hash.match(expr);\n      return match ? match[1] : null;\n    };\n    var state = hashMatch(/state=(\\w+)/);\n    if (sessionStorage.twitchOAuthState === state)\n      sessionStorage.twitchOAuthToken = hashMatch(/access_token=(\\w+)/);\n  };\n\n  var authUrl = useCallback(() => {\n    sessionStorage.twitchOAuthState = nonce(15);\n    var url =\n      \"https://id.twitch.tv/oauth2/authorize\" +\n      \"?response_type=token\" +\n      \"&client_id=\" +\n      clientId +\n      \"&redirect_uri=\" +\n      redirectURI +\n      \"&state=\" +\n      sessionStorage.twitchOAuthState +\n      \"&scope=\" +\n      scope;\n    return url;\n  }, []);\n\n  var getUserId = () => {\n    return fetch(\"https://api.twitch.tv/helix/users\", {\n      headers: {\n        Authorization: `Bearer ${sessionStorage.twitchOAuthToken}`,\n        \"Client-Id\": clientId,\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => data.data[0].id);\n  };\n\n  var nonce = (length) => {\n    var text = \"\";\n    var possible =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  };\n  var listen = useCallback((channelId) => {\n    let message = {\n      type: \"LISTEN\",\n      nonce: nonce(15),\n      data: {\n        topics: [`channel-points-channel-v1.${channelId}`],\n        auth_token: sessionStorage.twitchOAuthToken,\n      },\n    };\n    console.log(new Date().toLocaleString(), \"SENT:\", message);\n    ws.current.send(JSON.stringify(message));\n  }, []);\n\n  var heartbeat = () => {\n    let message = {\n      type: \"PING\",\n    };\n    ws.current.send(JSON.stringify(message));\n  };\n\n  var connect = useCallback(() => {\n    var heartbeatInterval = 1000 * 60;\n    var reconnectInterval = 1000 * 3;\n    var heartbeatHandle;\n    var connected = false;\n\n    ws.current = new WebSocket(\"wss://pubsub-edge.twitch.tv\");\n\n    ws.current.onopen = function (event) {\n      console.log(new Date().toLocaleString(), \"INFO: Socket Opened\");\n      heartbeat();\n      heartbeatHandle = setInterval(heartbeat, heartbeatInterval);\n    };\n\n    ws.current.onerror = function (error) {\n      console.error(new Date().toLocaleString(), \"ERR:\", error);\n    };\n\n    ws.current.onmessage = function (event) {\n      let message = JSON.parse(event.data);\n      console.log(new Date().toLocaleString(), \"RECV:\", message);\n      if (message.type === \"PONG\") {\n        if (!connected) {\n          getUserId().then((channelId) => {\n            connected = true;\n            listen(channelId);\n          });\n        }\n      }\n      if (message.type === \"RECONNECT\") {\n        console.log(new Date().toLocaleString(), \"INFO: Reconnecting...\");\n        setTimeout(connect, reconnectInterval);\n      }\n      if (message.type === \"reward-redeemed\") {\n        let color = message.data.redemption.user_input;\n        let rgbValue = hexToRgb(color);\n        let inputHex = 0;\n\n        // if (message.data.reward.title.includes(\"left\")) {\n        //   setLeft(rgbValue);\n        // } \n        \n        // else if (message.reward.title.includes(\"right\")) {\n        //   setRight(rgbValue);\n        // } \n        \n        if (message.reward.title.includes(\"gradient\")) {\n\n          setFirst(rgbValue);\n\n          if (inputHex === 0) { \n            setFirst(rgbValue); \n          }\n          else if (inputHex === 1) {\n            setSecond(rgbValue);\n          }\n          else if (inputHex === 2) {\n            setThird(rgbValue);\n          }\n          else if (inputHex === 3) {\n            setFourth(rgbValue);\n          }\n\n          inputHex ++;\n\n          if (inputHex > 3) {\n            inputHex = 0;\n          }\n        }\n      }\n    };\n\n    ws.current.onclose = function () {\n      console.log(new Date().toLocaleString(), \"INFO: Socket Closed\");\n      clearInterval(heartbeatHandle);\n      console.log(new Date().toLocaleString(), \"INFO: Reconnecting...\");\n      setTimeout(connect, reconnectInterval);\n      connected = false;\n    };\n  }, [ws, listen]);\n\n  useEffect(() => {\n    if (document.location.hash.match(/access_token=(\\w+)/))\n      parseFragment(document.location.hash);\n    if (sessionStorage.twitchOAuthToken) {\n      connect();\n      setReady(true);\n      //setDemo(false);\n    } else {\n      setAuthUrl(authUrl());\n      setReady(false);\n    }\n  }, [authUrl, connect]);\n\n  return (\n    <div\n      className=\"header\"\n      style={{\n        //background: `linear-gradient(60deg, rgba(${left.r},${left.g},${left.b}) 0%, rgba(${right.r},${right.g},${right.b}) 100%)`,\n        \n        background: `linear-gradient(60deg, rgba(${first.r},${first.g},${first.b}) 0%, rgba(${second.r},${second.g},${second.b}), \n        rgba(${third.r},${third.g},${third.b}), rgba(${fourth.r},${fourth.g},${fourth.b}) 100%)`,\n        backgroundSize: '400% 400%',\n        animation: 'gradient 20s ease infinite',\n        animationDirection: 'alternate',\n      }}\n    >\n      <div className=\"inner-header flex\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div\n              style={{ display: ready ? \"none\" : \"block\" }}\n              className=\"auth text-center\"\n            >\n              <p>First, connect with your Twitch Account:</p>\n              <a id=\"auth-link\" href={_authUrl}>\n                <img src={logo} alt=\"logo\" />\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div>\n        <svg\n          className=\"waves\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 24 150 28\"\n          preserveAspectRatio=\"none\"\n          shapeRendering=\"auto\"\n        >\n          <defs>\n            <path\n              id=\"gentle-wave\"\n              d=\"M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z\"\n            />\n          </defs>\n          <g className=\"parallax\">\n            <use href=\"#gentle-wave\" x=\"48\" y=\"0\" fill=\"rgba(255,255,255,0.7\" />\n            <use\n              href=\"#gentle-wave\"\n              x=\"48\"\n              y=\"3\"\n              fill=\"rgba(255,255,255,0.5)\"\n            />\n            <use\n              href=\"#gentle-wave\"\n              x=\"48\"\n              y=\"5\"\n              fill=\"rgba(255,255,255,0.3)\"\n            />\n            <use href=\"#gentle-wave\" x=\"48\" y=\"7\" fill=\"#fff\" />\n          </g>\n        </svg>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}